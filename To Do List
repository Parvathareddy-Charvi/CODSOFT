#include <iostream>
#include <vector>
#include <string>
using namespace std;
void addTask(vector<string>& todoList, const string& task) {
    todoList.push_back(task);
    cout << "Task added: " << task << endl;
}
void displayTasks(const vector<string>& todoList) {
    if (todoList.empty()) {
        cout << "No tasks in the to-do list." << endl;
    } else {
        cout << "To-Do List:" << endl;
        for (int i = 0; i < todoList.size(); ++i) {
            cout << i + 1 << ". " << todoList[i] << endl;
        }
    }
}
void completeTask(vector<string>& todoList, int index) {
    if (index >= 0 && index < todoList.size()) {
        cout << "Task completed: " << todoList[index] << endl;
        todoList.erase(todoList.begin() + index);
    } else {
        cout << "Invalid task index." << endl;
    }
}
int main() {
    vector<string> todoList;
    bool exit = false;
    while (!exit) {
        cout << "\n1. Add Task\n2. Display Tasks\n3. Complete Task\n4. Exit\n";
        cout << "Enter your choice: ";
        int choice;
        cin >> choice;

        switch (choice) {
            case 1: {
                string task;
                cout << "Enter task: ";
                cin.ignore();
                getline(cin, task);
                addTask(todoList, task);
                break;
            }
            case 2: {
                displayTasks(todoList);
                break;
            }
            case 3: {
                if (todoList.empty()) {
                    cout << "No tasks to complete." << endl;
                } else {
                    int index;
                    cout << "Enter index of task to complete: ";
                    cin >> index;
                    completeTask(todoList, index - 1);
                }
                break;
            }
            case 4: {
                exit = true;
                cout << "Exiting..." << endl;
                break;
            }
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }
    return 0;
}
